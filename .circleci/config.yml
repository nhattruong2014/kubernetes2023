version: 2
jobs:
  lint:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Create virtual env
          command: |
            make setup
      - run:
          name: Install dependencies
          command: |
            python3 -m venv ~/.devops
            source ~/.devops/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run install
          command: |
            source ~/.devops/bin/activate
            make install
            pip install joblib
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: Run test
          command: |
            source ~/.devops/bin/activate
            make test
      - run:
          name: Run lint
          command: |
            source ~/.devops/bin/activate
            make lint
  build:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Install dependencies aws cli
          command: |
            sudo apt install -y tar gzip curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -qq awscliv2.zip
            sudo ./aws/install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Docker login
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Build image from Dockerfile
          command: docker build --tag=capstone .
      - run:
          name: Add tag to docker and push docker to docker.io
          command: |
            docker tag capstone nhattruongngn/capstone:v1.0
            docker push nhattruongngn/capstone:v1.0
  deploy:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            sudo apt install -y tar gzip curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Install Kubernetes CLI
          command: |
            curl -kLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
      - run:
          name: Configure AWS CLI
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION
            aws configure set default.output json
            aws eks update-kubeconfig --name truong-capstone-eks-server
            kubectl cluster-info
            kubectl get all -n kube-system
      - run:
          name: Deployment configmap to EKS 
          command: |
            kubectl apply -f ./kubernetes/aws-auth-cm.yaml
      - run:
          name: Deploytment app to eks 
          command: |
            kubectl apply -f ./kubernetes/deploytment.yaml
      - run:
          name: Run test SVC
          command: |
            sleep 360
            kubectl get all 
workflows:
  version: 2
  default:
    jobs:
      - lint
      - build:
          requires: [lint]
      - deploy:
          requires: [build]
